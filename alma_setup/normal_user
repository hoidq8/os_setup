#!/bin/bash
source $(pwd)/variables

ohmyzsh_user() {
    rm -rf $HOME/.zshrc.pre-oh-my-zsh*
    if [ ! -d "$HOME/.oh-my-zsh" ]; then
        cd $REPO_DIR/data_prepared
        declare -a gitarray
        gitarray=(
            'zsh-users/zsh-syntax-highlighting.git '$HOME/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting''
            'zsh-users/zsh-autosuggestions '$HOME/.oh-my-zsh/custom/plugins/zsh-autosuggestions''
            'spaceship-prompt/spaceship-prompt.git '$HOME/.oh-my-zsh/custom/themes/spaceship-prompt''
            'TamCore/autoupdate-oh-my-zsh-plugins '$HOME/.oh-my-zsh/custom/plugins/autoupdate''
        )
        sh install.sh --unattended
        for i in "${gitarray[@]}"; do
            echo $(git clone https://github.com/$i)
        done
        ln -s $HOME/.oh-my-zsh/custom/themes/spaceship-prompt/spaceship.zsh-theme $HOME/.oh-my-zsh/custom/themes/spaceship.zsh-theme
        rm -rf $HOME/.oh-my-zsh/themes
    else
        cd $HOME/.oh-my-zsh
        git pull
    fi
}

terminal() {
    id=$(gsettings get org.gnome.Terminal.ProfilesList default | tr -d "'")
    path_terminal="/org/gnome/terminal/legacy/"
    val=(
        "profiles:/:$id/font"
        "'Red Hat Mono Light, Medium 12'"
        "profiles:/:$id/use-system-font"
        "false"
        "profiles:/:$id/visible-name"
        "'$user_current'"
        "profiles:/:$id/cursor-shape"
        "'ibeam'"
        "keybindings/copy"
        "'<Ctrl>C'"
        "keybindings/new-tab"
        "'<Ctrl>T'"
        "keybindings/new-window"
        "'<Ctrl>N'"
        "keybindings/save-contents"
        "'<Ctrl>S'"
        "keybindings/close-tab"
        "'<Ctrl>W'"
        "keybindings/close-window"
        "'<Ctrl>Q'"
        "keybindings/copy-html"
        "'<Ctrl>X'"
        "keybindings/paste"
        "'<Ctrl>V'"
        "keybindings/select-all"
        "'<Ctrl>A'"
        "keybindings/preferences"
        "'<Ctrl>P'"
        "keybindings/find"
        "'<Ctrl>F'"
        "keybindings/find-next"
        "'<Ctrl>G'"
        "keybindings/find-previous"
        "'<Ctrl>H'"
        "keybindings/find-clear"
        "'<Ctrl>J'"
    )
    for ((i = 0; i < ${#val[@]}; i += 2)); do
        setting="${val[i]}"
        value="${val[i + 1]}"
        dconf write "${path_terminal}${setting}" "${value}"
    done
    cd $REPO_DIR/data_prepared/
    git clone https://github.com/dracula/gnome-terminal
    cd gnome-terminal
    ./install.sh -s Dracula -p $user_current --skip-dircolors
    if [ -f $HOME/.zshrc ]; then
        rm -rf $HOME/.zshrc
    fi
    cd $REPO_DIR/
    cp .zshrc $HOME/.zshrc
    cp .spaceshiprc.zsh_user $HOME/.spaceshiprc.zsh
}

accessibility() {
    val=(
        "desktop/interface/text-scaling-factor"
        "1.25"
        "desktop/interface/gtk-theme"
        "'almalinux_themes'"
        "desktop/interface/icon-theme"
        "'almalinux_icons'"
        "desktop/interface/cursor-theme"
        "'almalinux_cursors'"
        "desktop/interface/clock-show-date"
        "true"
        "desktop/interface/show-battery-percentage"
        "true"
        "desktop/interface/clock-show-seconds"
        "true"
        "desktop/interface/clock-show-weekday"
        "true"
        "desktop/interface/enable-hot-corners"
        "false"
        "desktop/interface/locate-pointer"
        "true"
        "desktop/peripherals/touchpad/tap-to-click"
        "true"
        "desktop/session/idle-delay"
        "1800"
        "desktop/sound/allow-volume-above-100-percent"
        "true"
        "desktop/input-sources/show-all-sources"
        "true"
        "desktop/input-sources/sources"
        "[('xkb', 'us'), ('ibus', 'm17n:vi:telex')]"
        "desktop/wm/preferences/button-layout"
        "'close,minimize,maximize:appmenu'"
        "settings-daemon/plugins/color/night-light-enabled"
        "true"
        "settings-daemon/plugins/color/night-light-temperature"
        "3168"
        "settings-daemon/plugins/color/night-light-schedule-from"
        "0.0"
        "settings-daemon/plugins/color/night-light-schedule-to"
        "0.0"
    )
    for ((i = 0; i < ${#val[@]}; i += 2)); do
        setting="${val[i]}"
        value="${val[i + 1]}"
        dconf write /org/gnome/${setting} "${value}"
    done
}

gnome_extensions() {
    cd $REPO_DIR/data_prepared
    wget -N -q "https://raw.githubusercontent.com/ToasterUwU/install-gnome-extensions/master/install-gnome-extensions.sh" -O ./install-gnome-extensions.sh
    chmod +x install-gnome-extensions.sh
    declare -a extensions
    extensions=(
        '3628'
        '1160'
        '1486'
        '3843'
        '4405'
        '3010'
        '4679'
        '3733'
        '4670'
    )
    for i in "${extensions[@]}"; do
        echo $(./install-gnome-extensions.sh -e -o -u $i)
    done
    # sed -i "s/Main.panel.addToStatusArea ('cpufreq-indicator', monitor);/Main.panel.addToStatusArea ('cpufreq-indicator', monitor, 1, 'left');/g" $HOME/.local/share/gnome-shell/extensions/cpufreq@konkor/extension.js
    sed -i "s/panel.addToStatusArea('extensions-sync', this.button);/panel.addToStatusArea('extensions-sync', this.button, '2', 'right');/g" $HOME/.local/share/gnome-shell/extensions/extensions-sync@elhan.io/extension.js
    sed -i "s/panel = Main.panel._rightBox;/panel = Main.panel._leftBox;/g" $HOME/.local/share/gnome-shell/extensions/system-monitor-next@paradoxxx.zero.gmail.com/extension.js
}

keybinding() {
    KEY0_PATH="org.gnome.settings-daemon.plugins.media-keys.custom-keybinding"
    KEY_PATH="/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings"
    gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings \
        "['$KEY_PATH/custom0/']"
    gsettings set $KEY0_PATH:$KEY_PATH/custom0/ name "GNOME Terminal"
    gsettings set $KEY0_PATH:$KEY_PATH/custom0/ command "gnome-terminal"
    gsettings set $KEY0_PATH:$KEY_PATH/custom0/ binding "<Primary><Alt>T"
}

tasks=(
    "ohmyzsh_user"
    "terminal"
    "accessibility"
    "gnome_extensions"
    "keybinding"
)
for task in "${tasks[@]}"; do
    check_and_run "$task"
done
